package com.maycon.hotelaria.gui;

import com.maycon.hotelaria.dao.QuartoDAO;
import com.maycon.hotelaria.estruturas.Quarto;
import com.maycon.hotelaria.estruturas.Reserva;
import com.maycon.hotelaria.estruturas.Sessao;
import com.maycon.hotelaria.estruturas.TipoUsuario;
import com.maycon.hotelaria.dao.ReservaDAO;
import com.maycon.hotelaria.tabelas.TabelaFactory;
import static com.maycon.hotelaria.tabelas.TabelaFactory.setTamanhoColuna;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.persistence.PersistenceException;
import javax.swing.JOptionPane;

public class ReservaQuarto extends javax.swing.JFrame {

    public ReservaQuarto() {
        initComponents();
        Sessao sessao = Sessao.getInstance();
        lblTitular.setText(sessao.getUsuario().getNome());

        if (TipoUsuario.COMUM != sessao.getUsuario().getTipoUsuario()) {
            btnReservar.setVisible(false);
        }

        setTamanhoColuna(tbQuartosDisponiveis);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbTipoQuarto = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbQuartosDisponiveis = new javax.swing.JTable();
        btnConsultarQuartos = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnReservar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        lblTitular = new javax.swing.JLabel();
        jdFinal = new com.toedter.calendar.JDateChooser();
        jdInicio = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciador de Hotelaria");
        setMinimumSize(new java.awt.Dimension(815, 370));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel1.setText("Reserva de Quartos");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Titular da Reserva:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Escolha a data de interesse:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("a");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Tipo de quarto:");

        cbTipoQuarto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Solteiro", "Duplo", "Triplo", "Casal" }));

        tbQuartosDisponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id do Quarto", "Número do Quarto", "Tipo Quarto", "Valor da Diária", "Informações"
            })
            {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            }
        );
        jScrollPane1.setViewportView(tbQuartosDisponiveis);

        btnConsultarQuartos.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnConsultarQuartos.setText("Consultar Quartos");
        btnConsultarQuartos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarQuartosActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Escolha o quarto que deseja reservar");

        btnReservar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setMaximumSize(new java.awt.Dimension(85, 23));
        btnLimpar.setPreferredSize(new java.awt.Dimension(85, 23));
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(lblTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addComponent(jdInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jdFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(cbTipoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144)
                .addComponent(btnConsultarQuartos))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(lblTitular)
                    .addComponent(jLabel4)
                    .addComponent(jdInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5))
                    .addComponent(jdFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(cbTipoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnConsultarQuartos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarQuartosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarQuartosActionPerformed
        //PROGRAMAÃÃO DEFENSIVA
        if (jdInicio.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Escolha uma data inicial de reserva!", "Campo Vazio!", JOptionPane.WARNING_MESSAGE);
            jdInicio.requestFocus();
            return;
        }
        if (jdFinal.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Escolha uma data final de reserva!", "Campo Vazio!", JOptionPane.WARNING_MESSAGE);
            jdFinal.requestFocus();
            return;
        }

        Date dataFinalOriginal = jdFinal.getDate();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String tipoQuarto;

        if (cbTipoQuarto.getSelectedIndex() != 0) {
            tipoQuarto = cbTipoQuarto.getSelectedItem().toString();
        } else {
            tipoQuarto = null;
        }

        if (jdInicio.getDate().compareTo(jdFinal.getDate()) > 0) {
            JOptionPane.showMessageDialog(rootPane, "Data Final da reserva maior do que a Data Inicial!", "Intervalo Incorreto!", JOptionPane.WARNING_MESSAGE);
            jdInicio.setDate(null);
            jdFinal.setDate(null);
        } else {

            if (jdInicio.getDate().getDate() == dataFinalOriginal.getDate()) {

                Calendar c = Calendar.getInstance();
                c.setTime(jdFinal.getDate());
                c.add(Calendar.DAY_OF_MONTH, +1);
                dataFinalOriginal = c.getTime();
            }
            
            try{
                String dataInicio = formato.format(jdInicio.getDate());
                String dataFinal = formato.format(dataFinalOriginal);
                Object cabecalho[] = {"Id Quarto", "Número do Quarto", "Tipo do Quarto", "Valor da Diária", "Informações"};
                List<Quarto> quartosDisponiveis = new QuartoDAO().consultarQuartosDisponiveis(tipoQuarto, dataInicio, dataFinal);

                Object[][] dadosTable = new Object[quartosDisponiveis.size()][5];

                for (int i = 0; i < quartosDisponiveis.size(); i++) {
                    Quarto quartoTmp = quartosDisponiveis.get(i);
                    dadosTable[i] = new Object[]{quartoTmp.getIdQuarto(), quartoTmp.getNumQuarto(), quartoTmp.getTipoQuarto(), quartoTmp.getValorDiaria(), quartoTmp.getInformacoes()};
                }
                TabelaFactory.createTable(cabecalho, dadosTable, tbQuartosDisponiveis);
                TabelaFactory.setTamanhoColuna(tbQuartosDisponiveis);
            }catch(PersistenceException p){
                JOptionPane.showMessageDialog(null, "Erro na consulta da tabela Reservas! " + p.getMessage(), "Problema no Banco de Dados", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnConsultarQuartosActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        ReservaDAO reservaDAO = new ReservaDAO();
        Date dataFinalOriginal = jdFinal.getDate();

        //PROGRAMAÃÃO DEFENSIVA
        if (tbQuartosDisponiveis.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha da tabela para realizar a reserva!", "Reserva!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (tbQuartosDisponiveis.getValueAt(tbQuartosDisponiveis.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(rootPane, "Consulte uma reserva antes de clicar na linha da tabela!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            btnConsultarQuartos.requestFocus();
            return;
        }

        if (jdInicio.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Escolha uma data inicial de reserva!", "Campo Vazio!", JOptionPane.WARNING_MESSAGE);
            jdInicio.requestFocus();
            return;
        }

        if (jdFinal.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Escolha uma data final de reserva!", "Campo Vazio!", JOptionPane.WARNING_MESSAGE);
            jdFinal.requestFocus();
            return;
        }

        if (jdInicio.getDate().getDate() == dataFinalOriginal.getDate()) {

            Calendar c = Calendar.getInstance();
            c.setTime(jdFinal.getDate());
            c.add(Calendar.DAY_OF_MONTH, +1);
            dataFinalOriginal = c.getTime();
        }

        Reserva reserva = new Reserva();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

        String dataInicio = formato.format(jdInicio.getDate());
        String dataFinal = formato.format(dataFinalOriginal);
        
        Timestamp dataInicioTs, dataFinalTs;
        dataInicioTs = Timestamp.valueOf(dataInicio + " 14:00:00");
        dataFinalTs = Timestamp.valueOf(dataFinal + " 12:00:00");

        Quarto quarto = new Quarto();
        quarto.setIdQuarto(Integer.parseInt(tbQuartosDisponiveis.getValueAt(tbQuartosDisponiveis.getSelectedRow(), 0).toString()));
        reserva.setQuarto(quarto);
        reserva.setUsuario(Sessao.getInstance().getUsuario());
        reserva.setDataHoraEntrada(dataInicioTs);
        reserva.setDataHoraSaida(dataFinalTs);

        try{
            if (reservaDAO.cadastrarReservas(reserva)) {
                JOptionPane.showMessageDialog(rootPane, "Reserva realizada com sucesso!", "Reserva!", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                new MenuCliente().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Problema na reserva do quarto!", "Erro!", JOptionPane.ERROR_MESSAGE);
            }
        }catch(PersistenceException p){
            JOptionPane.showMessageDialog(null, "Erro na tabela de reservas: " + p.getMessage(), "Problema no Banco de Dados", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        cbTipoQuarto.setSelectedIndex(0);
        jdInicio.setDate(null);
        jdFinal.setDate(null);
        Object cabecalho[] = {"Id Quarto", "Número do Quarto", "Tipo do Quarto", "Valor da Diária", "Informações"};
        Object dados[][] = null;
        TabelaFactory.createTable(cabecalho, dados, tbQuartosDisponiveis);
        TabelaFactory.setTamanhoColuna(tbQuartosDisponiveis);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Sessao sessao = Sessao.getInstance();
        this.dispose();
        if (TipoUsuario.COMUM == sessao.getUsuario().getTipoUsuario()) {
            new MenuCliente().setVisible(true);
        } else {
            new MenuAdmin().setVisible(true);
        }
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservaQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservaQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservaQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservaQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservaQuarto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultarQuartos;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnReservar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox cbTipoQuarto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdFinal;
    private com.toedter.calendar.JDateChooser jdInicio;
    private javax.swing.JLabel lblTitular;
    private javax.swing.JTable tbQuartosDisponiveis;
    // End of variables declaration//GEN-END:variables
}
